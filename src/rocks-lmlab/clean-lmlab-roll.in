#!/bin/bash

# This script removes :
#    roll-installed RPMs, 
#    created directories
#    rocks host attributes
#    lmwriter account and groups

RM="rpm -evl --quiet --nodeps"
PY3=@PYBIN@
PIP3=/opt/python/bin/pip3.6
ROCKS_CMD=/opt/rocks/bin/rocks
LMUSER_COUNT=`/bin/egrep -i "^lmwriter" /etc/passwd  | wc -l`
LMROLL_COUNT=`$ROCKS_CMD list roll | grep lifemapper | wc -l`
LMCOMPUTE_ROLL_COUNT=`$ROCKS_CMD list roll | grep lifemapper-compute |  wc -l`
LMSERVER_ROLL_COUNT=`$ROCKS_CMD list roll | grep lifemapper-server |  wc -l`

TimeStamp () {
    echo $1 `/bin/date` >> $LOG
}

set_defaults() {
    THISNAME=`/bin/basename $0`
    LOG=/tmp/$THISNAME.log
    rm -f $LOG
    touch $LOG

    echo "-- enable modules"  | tee -a $LOG
    source /usr/share/Modules/init/bash

    NEED_SYNC=0
}

del-third-party-libs() {
    $RM gdal-libs gdal-devel
    $RM CharLS 
    $RM SuperLU 
    $RM armadillo 
    $RM arpack 
    $RM atlas atlas-devel
    $RM blas blas-devel
    $RM cfitsio 
    $RM freexl 
    $RM geos geos-devel
    $RM hdf5 hdf5-devel
    $RM lapack lapack-devel
    $RM libaec libaec-devel
    $RM libdap 
    $RM libgeotiff libgeotiff-devel
    $RM libgta
    $RM libtiff-devel
    $RM netcdf 
    $RM ogdi 
    $RM openblas-openmp 
    $RM openjpeg2 
    $RM postgresql-libs
    $RM proj 
    $RM unixODBC 
    $RM xerces-c 
    $RM gpsbabel
    $RM libusb
    $RM shapelib
    $RM spatialindex
    $RM spatialindex-devel
}


del-lmlab() {
    echo "Removing *lifemapper-* and prerequisite RPMS" >> $LOG
    $RM opt-lifemapper-biotaphypy
    $RM opt-lifemapper-cherrypy
    $RM opt-lifemapper-cython
    $RM opt-lifemapper-flask
    $RM opt-lifemapper-gdal
    $RM opt-lifemapper-lmpy
    $RM opt-lifemapper-lmtest
    $RM opt-lifemapper-matplotlib
    $RM opt-lifemapper-mod-wsgi
    $RM     lifemapper-proj
    $RM opt-lifemapper-requests
    $RM     rocks-lmlab
    $RM opt-lifemapper-specify-oat
    $RM roll-lifemapper-lab-usersguide
    $RM roll-lifemapper-lab-kickstart
}

del-python-dependencies () {
    module load opt-python
    echo "Removing python packages" >> $LOG
    $PY3 -m pip uninstall -y chardet certifi idna urllib3 requests
    $PY3 -m pip uninstall -y biotaphypy Cython mod-wsgi idigbio psycopg2-binary
    $PY3 -m pip uninstall -y MarkupSafe Jinja2 click itsdangerous Werkzeug Flask Flask-Cors
    $PY3 -m pip uninstall -y more-itertools pytz tempora portend jaraco.functools six cheroot setuptools zc.lockfile jaraco.classes zipp importlib-resources jaraco.text jaraco.collections CherryPy
    $PY3 -m pip uninstall -y wheel httpagentparser cherrypy-cors
    $PY3 -m pip uninstall -y Rtree DendroPy numpy scipy lmpy
    $PY3 -m pip uninstall -y six cycler numpy kiwisolver Pillow python-dateutil pyparsing matplotlib
    $PY3 -m pip uninstall -y attrs zipp importlib-metadata setuptools pyrsistent jsonschema openapi-schema-validator isodate more-itertools Werkzeug lazy-object-proxy PyYAML openapi-spec-validator six parse openapi-core 
    $PY3 -m pip uninstall -y PyYAML openapi3 simplejson termcolor dataclasses specify-open-api lm-test GDAL pysolr
    module load opt-python
}

del-lmtrex() {
   echo "Removing lifemapper t-rex and directory" >> $LOG
   rm -rf @LMHOME@/lmtrex
   $RM opt-lifemapper-lmtrex
   rm -rf /var/www/lmtrex
   
   echo "Removing lifemapper syftorium and code/data directories" >> $LOG
   rm -rf @LMHOME@/lmsyft
   rm -rf /state/partition1/lmlab/syftorium_data   
   $RM opt-lifemapper-lmsyft
   rm -rf /var/www/lmsyft
   
    /bin/egrep -i "^lmwriter" /etc/passwd
    if [[ $? -eq 0 ]]; then
        echo "Remove lmwriter user" >> $LOG
        /usr/bin/gpasswd -d apache lmwriter
        /user/sbin/userdel lmwriter
        /bin/rm -f /var/spool/mail/lmwriter
        /bin/rm -rf /export/home/lmwriter
        NEED_SYNC=1
    fi
   
}

del-solr () {
    SOLR_PROCESSES=`ps -Af | grep solr | grep -v "grep" | wc -l`
    if [[ $LMROLL_COUNT -eq 0  &&  $SOLR_PROCESSES -eq 1 ]]; then
        echo "-- stop Solr process " >> $LOG
        /usr/sbin/service solr stop
    fi

    $RM lifemapper-solr
    /usr/sbin/chkconfig --del solr 
    $PY3 -m pip uninstall -y pysolr
    rm -rf  @SOLRDATA@

    /bin/egrep -i "^solr" /etc/passwd
    if [[ $? -eq 0 ]]; then
        echo "Remove solr user" >> $LOG
        userdel solr
        /bin/rm -f /var/spool/mail/solr
        /bin/rm -rf /export/home/solr
        NEED_SYNC=1
    fi

    if [[ $NEED_SYNC -eq 1 ]]; then
        echo "Syncing users info" >> $LOG
        $ROCKS_CMD sync users
    fi
}


del-config () {
    echo "Removing system configuration files used by lifemapper-lab" >> $LOG
    rm -f  /etc/httpd/conf.modules.d/02-wsgi.conf
    rm -f  /etc/httpd/conf.d/syftorium.conf
    rm -rf /etc/ld.so.conf.d/lifemapper-lab-ld.conf
    rm -rf /etc/profile.d/lifemapper-lab.*
}

del-directories () {   
   echo "Removing lifemapper lab scratch dir @LMSCRATCHDISK@" >> $LOG
   rm -rf @LMSCRATCHDISK@
   echo "Removing lifemapper lab data dir @LMLABDISK@" >> $LOG
   rm -rf @LMLABDISK@
   echo "Removing lifemapper home dir @LMHOME@" >> $LOG
   rm -rf @LMHOME@
}

# remove obsolete Lifemapper cron jobs
del-cron-jobs () {
   rm -vf  /etc/cron.*/lmlab_*
   echo "Removed old cron jobs on frontend in /etc directories cron.d, cron.daily and cron.monthly ..."  >> $LOG
}

del-automount-entry () {
   cat /etc/auto.share  | grep -v "^lmlab " > /tmp/auto.share.nolmlab
   /bin/cp /tmp/auto.share.nolmlab /etc/auto.share
}

finish-cleanup () {
    echo >> $LOG
    echo "Removing roll lifemapper-lab" >> $LOG 
    $ROCKS_CMD remove roll lifemapper-lab
    
    echo "Rebuilding the distro" >> $LOG
    module unload opt-python
    (cd /export/rocks/install; $ROCKS_CMD create distro; yum clean all)
    echo >> $LOG
}


### main ###

set_defaults
TimeStamp "# Start"

del-lmlab
del-solr
del-python-dependencies
del-third-party-libs
del-config
del-directories
del-cron-jobs
del-lmtrex
del-directories
del-automount-entry

finish-cleanup

TimeStamp "# End"
