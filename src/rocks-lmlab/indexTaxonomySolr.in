#!/bin/bash
#
# This script dumps the contents of the taxon table into a CSV file, then 
# calls a python script to read and insert the contents into a solr index.
# If no arguments are sent, the script will filter by the GBIF Backbone Taxonomy.
# The optional argument specifies to filter by the provided taxonomysourceId.
#

usage () 
{
    echo "Usage: $0 [TAXONOMY_SOURCE_ID]"
    echo "This script is run on an existing lifemapper-server installation. "
    echo "It will:"
    echo "     - dump the contents of the taxon table records for "
    echo "       the GBIF Backbone Taxonomy or a provided taxonomy source id "
    echo "   "
    echo "The script can be run at any time to solr-index data for"
    echo "a taxonomy."
    echo "   "
}

set_defaults() {
    THISNAME=`/bin/basename $0`
    TSTAMP=`date +'%F_%T'`

    TAXONCSV=@LMSCRATCHDISK@/temp/taxon.$TSTAMP.csv
    LOG=@LMSCRATCHDISK@/log/$THISNAME.$TSTAMP.log
    # Append to existing logfile
    touch $LOG
    
    USERSFILE=/opt/lifemapper/rocks/etc/users
    SOLRIDX_PY=/opt/lifemapper/LmDbServer/tools/index_taxonomy_from_csv.py

	# load opt-python and environment
    source /usr/share/Modules/init/bash
    module load opt-python
    . /etc/profile.d/lifemapper.sh
}


# Log execution
time_stamp () {
    echo $1 `/bin/date` >> $LOG
}


### sets the password for db "admin" user to execute sql commands
set_password () {
    # check if users file exists
    if [ ! -f $USERSFILE ] ; then
        echo "Error: missing file $USERSFILE" >> $LOG
        exit 1
    fi

    # check who is running the scipt
    cat $USERSFILE > /dev/null
    RETVAL=$?
    if [ $RETVAL -ne 0 ]; then
        echo "Error: You must be root to run this script" >> $LOG
        exit 1
    fi

    # get the password from 'users' file
    echo "-- setting postgres password" >> $LOG
    PASS=`grep admin $USERSFILE | awk '{print $2}'`
    export PGPASSWORD=$PASS
}


### Retrieve taxonomy as a CSV file
get_taxonomy_as_csv () {
    # find metadata file testpkgname.ini
    if [ -f $TAXONCSV ]; then
        echo "Output file $TAXONCSV already present" | tee -a $LOG
    else  
    	GET_TAX_CMD="select * from lm_v3.taxon where taxonomysourceid = $TAXSOURCEID"
        echo "Fetch test data into $TAXONCSV" | tee -a $LOG
        psql -U admin -d borg -c "COPY ($GET_TAX_CMD) TO STDOUT WITH CSV HEADER" > $TAXONCSV
    fi     
}


### Populate a solr index with taxonomy for chosen source
solr_index_taxonomy () {
    if [ -f $SOLRIDX_PY ] ; then
        echo "Index taxonomy into solr with '$SOLRIDX_PY ..." | tee -a $LOG
        @PYBIN@ $SOLRIDX_PY $TAXONCSV  2>&1 | tee -a $LOG
    else
        echo "Error: Missing file $SOLRIDX_PY" | tee -a $LOG
        exit 1
    fi
}

###............................................................................
### main

set_defaults
set_password

if [ $# -eq 1 ]; then
    TAXSOURCEID=$1
else  
    echo "Fetch GBIF taxonomy source ID" | tee -a $LOG
    GET_ID_CMD="select taxonomysourceid from taxonomysource where datasetidentifier = 'GBIF Backbone Taxonomy'"
    TAXSOURCEID=`psql -U admin -d borg -c "COPY ($GET_ID_CMD) TO STDOUT"`
fi 

get_taxonomy_as_csv
solr_index_taxonomy


#psql -U admin -d borg -c "COPY (select * from lm_v3.taxon where taxonomysourceid = 1) TO STDOUT WITH CSV HEADER" > /tmp/taxon.csv | awk '{print $2}'
