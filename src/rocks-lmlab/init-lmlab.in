#!/bin/bash
#
# This script is creates configuration files for postgres and pgbouncer. 
# The script can be run at any time to remove all the previous configuration
# and create a new one. 

usage () 
{
    echo "Usage: $0"
    echo "This script is run during the roll install and will:"
    echo "     - inserts host IP in @LMHOME@/config/config.lmlab.ini\n"
    echo "     - installs cron files\n"
    echo "   "
}

if [ $# -ne 0 ]; then
    usage
    exit 0
fi 

set_defaults() {
    LOG=@LMSCRATCHDISK@/log/`/bin/basename $0`.log
    rm -f $LOG
    touch $LOG

    PROF=/etc/profile.d/lifemapper-lab.sh
    echo "-- set environment"  >> $LOG
    if [ -f $PROF ] ; then
	 . $PROF 
    else
    	echo "ERROR: file $PROF not found" >> $LOG 
    	exit
    fi

    echo "-- enable modules"  >> $LOG
    source /usr/share/Modules/init/bash

    # Rocks version
    ROCKS_VER=`/opt/rocks/bin/rocks list roll | grep base | awk '{print $2}'`
   
    BIN=@PKGROOT@/rocks/bin
    CONFIG=@PKGROOT@/config
    PY3=@PYBIN@
    WHL_DIR=@PKGROOT@/rocks/etc

    INSTALL_CORE_DIR=@LMHOME@/rocks/solrcores
	SOLR_CORE_DIR=@SOLRDATA@/data/cores

    # Source function library.
    INITD=/etc/rc.d/init.d
    . $INITD/functions
}


cmd_opt_python () {
	cmd=$1
    echo "-- $1 opt-python" >> $LOG
    module $1 opt-python
    $PY3 --version >> $LOG
}

set_permissions () {
    /bin/egrep -i "^lmwriter" /etc/passwd
    if [ $? -ne 0 ]; then
        echo "Error: user lmwriter does not exist" >> $LOG
        exit 1
    fi

    echo "Update group permissions for lmwriter on @LMHOME@" >> $LOG
    for item in "config" "Lm*" "__init__.py*" ; do
        /bin/chgrp -R lmwriter @LMHOME@/$item
        /bin/chmod -R g+ws     @LMHOME@/$item
    done
}

finish_wheel_installs () {
    module load opt-python
    $PY3 -m ensurepip --default-pip
    $PY3 -m pip install --upgrade pip
    echo "-- Start install_wheels script" >> $LOG
    $BIN/install-lmlab-wheels
    echo "-- End install_wheels script" >> $LOG
}


install_all_solrcores () {
	/usr/sbin/chkconfig --add solr 
	/usr/sbin/chkconfig  solr on
    if [[ -d $SOLR_CORE_DIR ]] ; then
		/usr/bin/systemctl stop solr.service
        echo "-- move any solr cores" >> $LOG
        /opt/lifemapper/rocks/bin/solr-index
		/usr/bin/systemctl restart solr.service
	else
        echo "-- Error: missing $SOLR_CORE_DIR directory!" >> $LOG
    fi
}


# update linker paths
run_ldconfig () {
    echo "-- run ldconfig" >> $LOG
    /sbin/ldconfig
}


# install cron jobs for daily execution
install_cron_jobs () {
    echo "-- Start install-lmlab-cron" >> $LOG
    $BIN/install-lmlab-cron
    echo "-- End install-lmlab-cron" >> $LOG
}

get_ip_address () {
    # public host address
    # Addr=`/opt/rocks/bin/rocks list host attr localhost | grep Kickstart_PublicFQDN | awk '{print $3}'`
    IPAddr=`/usr/sbin/ifconfig eth1 | grep inet | grep broadcast  | awk '{print $2}'`
}

update_lmsyft_apache_config () {
    infile=$CONFIG/lmsyft/syftorium.conf.in
    outfile=$CONFIG/lmsyft/syftorium.conf
    
    if [ -f $outfile ] ; then
        bakext=`/bin/date +%F`
        echo '  File ' $outfile ' exists, saving to ' $outfile.$bakext  >> $LOG
        mv -f $outfile $outfile.$bakext
    fi
    
    echo '  Creating ' $outfile ' from ' $infile >> $LOG
	# TODO: also replace SSL certificate variables
    sed  "s%@FQDN@%$IPAddr%g" $infile > $outfile
}

update_lmtrex_apache_config () {
	FILES=$CONFIG/lmtrex/*.in
	for f in $FILES
        do
		    infile=$CONFIG/lmtrex/$f
		    outfile=${infile%.*}
    
		    if [ -f $outfile ] ; then
		        bakext=`/bin/date +%F`
		        echo '  File ' $outfile ' exists, saving to ' $outfile.$bakext  >> $LOG
		        mv -f $outfile $outfile.$bakext
    		fi
    	done
    
    echo '  Creating ' $outfile ' from ' $infile >> $LOG
    # replace variables
    sed  "s%@FQDN@%$IPAddr%g" $infile > $outfile
}


time_stamp () {
    echo $1 `/bin/date` >> $LOG
}

####### Main #######
set_defaults
time_stamp "# Start"

finish_wheel_installs
run_ldconfig

# Cron jobs do not currently exist in this roll
install_cron_jobs

# done in lifemapper-lab.xml file
# install_all_solrcores

get_ip_address
update_lmsyft_apache_config
update_lmtrex_apache_config

time_stamp "# End"
