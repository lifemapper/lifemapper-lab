#!/bin/bash
#
# Run this scirpt if db users need  passwords need a change.
# This script does the following:
#     Create lifemapper db users and roles.sql 
#     Initialize postgres db with user/postgis data
#     Create postgres and pgbouncer config and auth files
# Restart postgres and pgbouncer after running this script

set_defaults() {
    # Source function library.
    INITD=/etc/rc.d/init.d
    . $INITD/functions

    # log errors
    LOG=@LMSCRATCHDISK@/log/`/bin/basename $0`.log
    rm -f $LOG
    touch $LOG
    BIN=@PKGROOT@/rocks/bin

    echo "-- enable modules"  | tee -a $LOG
    source /usr/share/Modules/init/bash
}

cmd_opt_python () {
	cmd=$1
    echo "-- $1 opt-python"  | tee -a $LOG
    module $1 opt-python
    @PYBIN@ --version | tee -a $LOG
}

# create lifemapper db users and roles.sql 
# and initialize postgres db with user/postgis data
create_db_users() {
    cmd_opt_python load

    echo "-- create lifemapper db users" >> $LOG
    $BIN/confUsers >> $LOG

    echo "-- update users passwords in @LMHOME@/LmServer/db/connect.py" >> $LOG
    $BIN/confDbconnect >> $LOG  2>&1

    echo "-- create roles and postgis tables" >> $LOG
    $BIN/initPostgis >> $LOG  2>&1
}

# create postgres and pgbouncer config and auth files
create_config_files() {
    cmd_opt_python load
	
    # create postgres config file 
    echo "-- create postgres config file" >> $LOG
    $BIN/confPostgres pg >> $LOG

    # create md5 auth client info in config file
    echo "-- create postgres auth file " >> $LOG
    $BIN/confPostgres ca >> $LOG

    # create new pgbouncer config file 
    echo "-- create pgbouncer config file " >> $LOG
    $BIN/confPgbouncer >> $LOG
}

####### Main #######
set_defaults
echo "# Start" `/bin/date` >> $LOG
create_db_users
create_config_files
echo "# End" `/bin/date` >> $LOG
