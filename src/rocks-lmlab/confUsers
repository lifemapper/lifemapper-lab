#!/opt/rocks/bin/python

import os
import sys
import subprocess
import re
import confconst
import confbase

class ConfUser(confbase.Baseconfig):
    def __init__(self, argv):
        confbase.Baseconfig.__init__(self, argv)
        self.passdict   = {}                      # dictionary of user passwords 
        self.mkpasswd = confconst.MKPASSWD
        
        self.nameinfo = "creates users account info for Lifemapper's postgres and pgbouncer access"
        self.descinfo ='Create a text file %s.\n' % self.users + \
                       '%sFile format: USERNAME PASSWORD per line, password is not encrypted.\n' % self.space + \
                       '%sCreate a text file %s to use for db users creation.\n' % (self.space,self.role) + \
                       '%sThe script is called during lifemapper-server roll installation.\n' % self.space + \
                       '%sFiles ownership is postgres and permissions are set to 0600\n' % self.space

        self.parseArgs()

    def makeAuthLines(self):
        """ create content of users file: user, random password per line 
            collect password/use info in self.passdict for creating sql file"""
        lines = ""
	for user in self.userlist + self.adminlist:
            word, err = subprocess.Popen(self.mkpasswd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE).communicate()
            lines += "%s %s\n" % (user, word[:-1])
            self.passdict["PASS"+user] = word[:-1]
        return lines


    def makeUserFile(self):
        """ create users file """
        lines = self.makeAuthLines()
        fname = self.users
        self.backupFile(fname)
        self.writeFile(fname, lines)
        os.chmod(fname, 0600)


    def replaceWords(self, text):
        """ return text with placeholder words replaced by the correct values """
        regex = re.compile("(%s)" % "|".join(map(re.escape, self.passdict.keys())))
        return regex.sub(lambda func: self.passdict[func.string[func.start():func.end()]], text) 


    def makeSQLfile(self, templ, file):
        """ create sql file from a tempalte, substitute placeholders with created passwords """
        # read content from template, replace placeholders with real passwords
        content = self.replaceWords(self.readFileText(templ))

        # write new content in a file
        self.writeFile(file, content)
        self.getPerms(self.base)
        os.chmod(file, 0600)
        os.chown(file, self.uid, self.gid)

    def run(self):
        self.makeUserFile()
        self.makeSQLfile(self.roletempl, self.role)

### Main ###
app = ConfUser(sys.argv)
app.run()

