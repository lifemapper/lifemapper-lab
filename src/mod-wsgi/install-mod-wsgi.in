#!/bin/bash 

# Purpose: install mod-wsgi before other python wheels so httpd is immediately available
# 
# Called during roll install, prior to reboot with configuration and python wheel install

BIN=@PKGROOT@/rocks/bin
PY3=@PYBIN@
WHL_DIR=@PKGROOT@/rocks/etc
WHLNAME=@ARCHIVENAME@-@VERSION@
WSGI_MODULE=@PYTHON36_PACKAGES@/mod_wsgi/server/mod_wsgi-py36.cpython-36m-x86_64-linux-gnu.so

set_defaults () {
	echo "Load opt-python for pip"
	source /usr/share/Modules/init/bash
	module load opt-python

	HAS_WSGI=`$PY3 -m pip list | grep wsgi | grep @VERSION@ | wc -l`
	HAS_SETUP=`$PY3 -m pip list | grep setuptools`
}

ensure_pip () {
	module load opt-python
	$PY3 -m ensurepip --default-pip
	$PY3 -m pip install --upgrade pip
	module unload opt-python
}


install_setuptools () {
	# need setuptools
	if [[ $HAS_SETUP -eq 0 ]]; then
		echo "Installing setuptools python package"
		$PY3 -m pip install $WHL_DIR/setuptools*whl
	else
		echo "Python setuptools module is installed"
	fi
}

install_wsgi () {
	echo "Installing $WHLNAME python package"
	$PY3 -m pip install $WHL_DIR/$WHLNAME.tar.gz
}

test_config () {
	# Check if file referenced in configuration is present
	if [[ -f $WSGI_MODULE ]] ; then
	    echo "Have correct $WSGI_MODULE"
	else
	    echo "ERROR: missing wsgi module for wsgi.conf $WSGI_MODULE"
	fi
}

time_stamp () {
    echo $1 `/bin/date`
}

####### Main #######
time_stamp "# Start"
set_defaults
ensure_pip

if [[ $HAS_WSGI -eq 0 ]]; then
	install_setuptools
	install_wsgi
fi

test_config
time_stamp "# Start"
